<h1>New Order</h1>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<meta name="viewport" content="width-device-width,initial-scale=1.0, maximum-scale=1.0"/>
  
<style type="text/css">
  #addressBookWidgetDiv{width: 400px; height: 228px;}
  #walletWidgetDiv {width: 400px; height: 228px;}</style>

<script type='text/javascript'>
  window.onAmazonLoginReady = function() {
    console.log("Window.onAmazonLoginReady");
    amazon.Login.setClientId('amzn1.application-oa2-client.6a339767de8e43488a78fd93592e3f27');
  };
  window.getParameterByName = function(name, url) {
        if (!url) url = window.location.href;
        name = name.replace(/[\[\]]/g, "\\$&");
        var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
            results = regex.exec(url);
        if (!results) return null;
        if (!results[2]) return '';
        return decodeURIComponent(results[2].replace(/\+/g, " "));
    }
  var access_token = window.getParameterByName("access_token", window.location.href);
  window.access_token = access_token;
  console.log(access_token);
  console.log("testetststes");
  window.onAmazonPaymentsReady = function(){
    console.log("window.onAmazonPaymentsReady");
    var authRequest;
    if (window.access_token) {
      console.log(window.access_token)
      new OffAmazonPayments.Widgets.AddressBook({
          sellerId: 'A3QCQLYZKBHFRS',
          scope: 'payments:shipping_address',
          sandbox: 'true',
          onBillingAgreementCreate: function(billingAgreement) {
            // Here is where you can grab the Order Reference ID.
            console.log("onBillingAgreementCreate");
            var billingAgreementId = billingAgreement.getAmazonBillingAgreementId();
            var access_token = window.getParameterByName("access_token", window.location.href);
            window.billingAgreementId = billingAgreementId;
            window.access_token = access_token;
            console.log(billingAgreementId);
          },
          onAddressSelect: function(billingAgreement) {
            console.log("onAddressSelect");
            console.log("billingAgreement.getID()");
            console.log(billingAgreement.getID());
            // Replace the following code with the action that you want
            // to perform after the address is selected. The
            // amazonbillingAgreementId can be used to retrieve the address
            // details by calling the GetbillingAgreementDetails operation.
            // If rendering the AddressBook and Wallet widgets
            // on the same page, you do not have to provide any additional
            // logic to load the Wallet widget after the AddressBook widget.
            // The Wallet widget will re-render itself on all subsequent
            // onAddressSelect events without any action from you.
            // It is not recommended that you explicitly refresh it.
          },
          design: {
            designMode: 'responsive'
          },
          onReady: function(billingAgreement) {
            var billingAgreementId = billingAgreement;
            getAmazonbillingAgreementId();
            console.log("onReady");
            console.log(billingAgreement);
            // Enter code here that you want to be executed
            // when the address widget has been rendered.
          },
          onError: function(error) {
            console.log("error on addressBook");
            console.log(error.getErrorCode() + ': ' + error.getErrorMessage());
            // Your error handling code.
            // During development you can use the following
            // code to view error messages:
            // console.log(error.getErrorCode() + ': ' + error.getErrorMessage());
            // See "Handling Errors" for more information.
          }
        }).bind("addressBookWidgetDiv");
        new OffAmazonPayments.Widgets.Wallet({
          sellerId: 'A3QCQLYZKBHFRS',
          amazonbillingAgreementId: amazonbillingAgreementId,
          sandbox: 'true',
          onPaymentSelect: function(billingAgreement) {
            console.log("onPaymentSelect");
            console.log("billingAgreement.getID()");
            console.log(billingAgreement.getID());
            // Replace this code with the action that you want to perform
            // after the payment method is chosen.
            // Ideally this would enable the next action for the buyer
            // including either a "Continue" or "Place Order" button.
          },
          design: {
            designMode: 'responsive'
          },
          onError: function(error) {
            console.log("error on Wallet");
            console.log(error.getErrorCode() + ': ' + error.getErrorMessage());
            // Your error handling code.
            // During development you can use the following
            // code to view error messages:
            // console.log(error.getErrorCode() + ': ' + error.getErrorMessage());
            // See "Handling Errors" for more information.
          }
        }).bind("walletWidgetDiv");
        new OffAmazonPayments.Widgets.Consent({
          sellerId: 'A3QCQLYZKBHFRS',
          amazonbillingAgreementId: amazonbillingAgreementId,
          design: {
            designMode:'responsive'
          },
          onReady: function(billingAgreementConsentStatus)
        })
    } else {
      console.log("AmazonPayButton");
      OffAmazonPayments.Button("AmazonPayButton", "A3QCQLYZKBHFRS", {
        type: "LwA",
        color: "Gold",
        size: "small",

        authorization: function() {
          loginOptions = {scope: "profile payments:widget payments:shipping_address", popup: "true", sandbox: "true"};
          authRequest = amazon.Login.authorize (loginOptions,
            function(response) {
              addressConsentToken = response.access_token;
            });
        },
        onSignIn: function (billingAgreement) {
          var referenceId = billingAgreement.getAmazonBillingAgreementId();

          if (!referenceId) {
            errorHandler(new Error('referenceId missing'));
          } else {
            window.location = "http://localhost:3000/orders/new" + '?referenceId=' + 
              billingAgreement.getAmazonBillingAgreementId() + 
              "&access_token=" + addressConsentToken;
          }
        },

        onError: function(error) {
          // your error handling code
          alert("errorã€€on login");
        }
      });
    }
    // if (!access_token) {return}
    $(document).ready(function(){
      $("form").submit(function(){
        $("#order_access_token").val(window.access_token);
        $("#order_order_reference_id").val(window.billingAgreementId);
      });
    });
  }
</script>

<script type="text/javascript">

  document.getElementById('Logout').onclick = function() {
    amazon.Login.logout();
    document.cookie = "amazon_Login_accessToken=; expires = nkdjldjvldfjkvd";
     window.location = "http://localhost:3000";
  };
</script>

<script async='async' type='text/javascript'
  src='https://static-fe.payments-amazon.com/OffAmazonPayments/jp/sandbox/lpa/js/Widgets.js'>
</script>


<%= render "form" %>
<br />
<br />
<br />

<div id="addressBookWidgetDiv" style="width: 400px; height: 400px"></div>

<div id="AmazonPayButton"></div>

<div id="walletWidgetDiv"></div>
<div id="consentWidgetDiv"></div>



<br />
<br />
<br />
<br />
<br />
<br />